{"version":3,"sources":["components/Header/index.js","utils/API.js","components/Table/index.js","components/Search/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Header","className","getEmployee","Promise","resolve","reject","axios","get","then","res","results","data","map","employee","key","login","uuid","image","picture","large","first","name","last","age","dob","city","location","state","catch","err","alert","Table","props","forceUpdate","React","useReducer","firstSort","newdata","employeeTable","sort","a","b","choice","prompt","toLowerCase","updateTable","reverse","lastSort","ageSort","onClick","src","alt","Search","htmlFor","value","input","onChange","e","preventDefault","target","filter","includes","handleInputChange","list","type","placeholder","id","EmployeeCont","useState","table","setTable","useEffect","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b7f0d6a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"jumbotron\">\r\n            <h1 className=\"display-3\">Employee Directory</h1>\r\n            <h3 className=\"lead\">Quickly navigate through your employees!</h3>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nconst getEmployee = () => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(\"https://randomuser.me/api/?results=50\").then(res => {\r\n            const results = res.data.results.map(employee => ({\r\n                key: employee.login.uuid,\r\n                image: employee.picture.large,\r\n                first: employee.name.first,\r\n                last: employee.name.last,\r\n                age: employee.dob.age,\r\n                city: employee.location.city,\r\n                state: employee.location.state,\r\n            }));\r\n            resolve(results);\r\n        })\r\n        .catch(err => reject(alert(err)));\r\n    })\r\n};\r\n\r\nexport default getEmployee;","import React from \"react\";\r\n\r\nconst Table = (props) => {\r\n    const forceUpdate = React.useReducer(() => ({}), {})[1];\r\n\r\n    function firstSort() {\r\n        let newdata = props.employeeTable.sort((a, b) => {\r\n            if (a.first < b.first) {\r\n                return -1\r\n            }\r\n            if (a.first > b.first) {\r\n                return 1\r\n            }\r\n            return 0\r\n        });\r\n        let choice = prompt('Type \"a\" for Ascending or \"d\" for Descending');\r\n        if (choice === null) {\r\n            return;\r\n        } else if (choice !== 'a' && choice !== 'd') {\r\n            alert('Please enter a valid character!');\r\n            firstSort();\r\n        }\r\n        switch (choice.toLowerCase()) {\r\n            case 'd':\r\n                props.updateTable(newdata.reverse());\r\n                forceUpdate();\r\n                break;\r\n            default:\r\n                props.updateTable(newdata);\r\n                forceUpdate();\r\n        }\r\n    };\r\n\r\n    const lastSort = () => {\r\n        let newdata = props.employeeTable.sort((a, b) => {\r\n            if (a.last < b.last) {\r\n                return -1\r\n            }\r\n            if (a.last > b.last) {\r\n                return 1\r\n            }\r\n            return 0\r\n        });\r\n        let choice = prompt('Type \"a\" for Ascending or \"d\" for Descending');\r\n        if (choice === null) {\r\n            return;\r\n        } else if (choice !== 'a' && choice !== 'd') {\r\n            alert('Please enter a valid character!');\r\n            lastSort();\r\n        }\r\n        switch (choice.toLowerCase()) {\r\n            case 'd':\r\n                props.updateTable(newdata.reverse());\r\n                forceUpdate();\r\n                break;\r\n            default:\r\n                props.updateTable(newdata);\r\n                forceUpdate();\r\n        }\r\n    };\r\n\r\n    const ageSort = () => {\r\n        let newdata = props.employeeTable.sort((a, b) => {\r\n            if (a.age < b.age) {\r\n                return -1\r\n            }\r\n            if (a.age > b.age) {\r\n                return 1\r\n            }\r\n            return 0\r\n        });\r\n        let choice = prompt('Type \"a\" for Ascending or \"d\" for Descending');\r\n        if (choice === null) {\r\n            return;\r\n        } else if (choice !== 'a' && choice !== 'd') {\r\n            alert('Please enter a valid character!');\r\n            ageSort();\r\n        }\r\n        switch (choice.toLowerCase()) {\r\n            case 'd':\r\n                props.updateTable(newdata.reverse());\r\n                forceUpdate();\r\n                break;\r\n            default:\r\n                props.updateTable(newdata);\r\n                forceUpdate();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table className=\"table table-hover\">\r\n            <thead>\r\n                <tr className=\"tableHead\">\r\n                    <th>Employees</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>Employee Photo</th>\r\n                    <th>First Name <button className='downArrow fa fa-angle-down' onClick={() => firstSort()}></button></th>\r\n                    <th>Last Name <button className='downArrow fa fa-angle-down' onClick={() => lastSort()}></button></th>\r\n                    <th>Age <button className='downArrow fa fa-angle-down' onClick={() => ageSort()}></button></th>\r\n                    <th>City</th>\r\n                    <th>State</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.employeeTable.map(employee => (\r\n                    <tr key={employee.key}>\r\n                        <td>\r\n                            <img src={employee.image} alt=\"Not Provided\"></img>\r\n                        </td>\r\n                        <td>\r\n                            {employee.first}\r\n                        </td>\r\n                        <td>\r\n                            {employee.last}\r\n                        </td>\r\n                        <td>\r\n                            {employee.age}\r\n                        </td>\r\n                        <td>\r\n                            {employee.city}\r\n                        </td>\r\n                        <td>\r\n                            {employee.state}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Table;","import React from \"react\";\r\n\r\nconst Search = (props) => {\r\n\r\n    const handleInputChange = (e) => {\r\n        e.preventDefault();\r\n        const input = e.target.value.toLowerCase();\r\n        const existingTable = props.employeeTable;\r\n        const filter = existingTable.filter((data) => {\r\n            const result = data.first + data.last;\r\n            return result.toLowerCase().includes(input);\r\n        });\r\n\r\n        props.updateTable(filter);\r\n      };\r\n\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"form-group\">\r\n                <label className=\"searchLabel\" htmlFor=\"language\">Search Employee:</label>\r\n                <input\r\n                value={props.input}\r\n                onChange={(e) => handleInputChange(e)}\r\n                name=\"employee\"\r\n                list=\"employeeTable\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search by First or Last name!\"\r\n                id=\"employee\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useEffect, useState } from \"react\";\r\nimport getEmployee from \"../../utils/API\";\r\nimport Table from \"../Table\";\r\nimport Search from \"../Search\";\r\n\r\nfunction EmployeeCont() {\r\n    const [table, setTable] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getEmployee().then((results) => {\r\n            setTable(results);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n    }, [table]);\r\n\r\n    return (\r\n        <>\r\n            <Search employeeTable={table} updateTable={setTable} />\r\n            <Table employeeTable={table} updateTable={setTable} />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default EmployeeCont","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport EmployeeContainer from \"./components/Wrapper\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <EmployeeContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}