{"version":3,"sources":["components/Header/index.js","utils/API.js","components/Search/index.js","components/Table/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Header","className","getEmployee","Promise","resolve","reject","axios","get","then","res","results","data","map","employee","key","login","uuid","image","picture","large","first","name","last","age","dob","city","location","state","catch","err","alert","Search","useState","search","setSearch","useEffect","console","log","htmlFor","value","onChange","list","type","placeholder","id","Table","table","setTable","forceUpdate","React","useReducer","firstSort","newTable","sort","a","b","choice","prompt","toLowerCase","reverse","lastSort","ageSort","onClick","src","alt","Wrapper","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a5ab558.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"jumbotron\">\r\n            <h1 className=\"display-3\">Employee Directory</h1>\r\n            <h3 className=\"lead\">Quickly navigate through your employees!</h3>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nconst getEmployee = () => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(\"https://randomuser.me/api/?results=50\").then(res => {\r\n            const results = res.data.results.map(employee => ({\r\n                key: employee.login.uuid,\r\n                image: employee.picture.large,\r\n                first: employee.name.first,\r\n                last: employee.name.last,\r\n                age: employee.dob.age,\r\n                city: employee.location.city,\r\n                state: employee.location.state,\r\n            }));\r\n            resolve(results);\r\n        })\r\n        .catch(err => reject(alert(err)));\r\n    })\r\n};\r\n\r\nexport default getEmployee;","import React, { useState, useEffect } from \"react\";\r\nimport getEmployee from \"../../utils/API\";\r\n\r\n\r\nconst Search = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(!search) {\r\n            return;\r\n        }\r\n\r\n        getEmployee(search).then(res => {\r\n            console.log(res);\r\n            setSearch(res);\r\n        })\r\n    })\r\n\r\n    const handleInputChange = event => {\r\n        console.log(search);\r\n      };\r\n\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"form-group\">\r\n                <label className=\"searchLabel\" htmlFor=\"language\">Search Employee:</label>\r\n                <input\r\n                value={search}\r\n                onChange={() => handleInputChange()}\r\n                name=\"employee\"\r\n                list=\"employeeList\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search by First or Last name!\"\r\n                id=\"employee\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useEffect, useState } from \"react\";\r\nimport getEmployee from \"../../utils/API\";\r\n\r\nfunction Table() {\r\n    const [table, setTable] = useState([]);\r\n\r\n    const forceUpdate = React.useReducer(() => ({}), {})[1];\r\n\r\n    useEffect(() => {\r\n        getEmployee().then((results) => {\r\n            console.log(results);\r\n            setTable(results);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"table useEffect: \", table)\r\n    }, [table]);\r\n\r\n    function firstSort() {\r\n        let newTable = table.sort((a, b) => {\r\n            if (a.first < b.first) {\r\n                return -1\r\n            }\r\n            if (a.first > b.first) {\r\n                return 1\r\n            }\r\n            return 0\r\n        });\r\n        let choice = prompt('Type \"a\" for Ascending or \"d\" for Descending');\r\n        if (choice === null) {\r\n            return;\r\n        } else if (choice !== 'a' && choice !== 'd') {\r\n            alert('Please enter a valid character!');\r\n            firstSort();\r\n        }\r\n        switch (choice.toLowerCase()) {\r\n            case 'd':\r\n                setTable(newTable.reverse());\r\n                forceUpdate();\r\n                break;\r\n            default:\r\n                setTable(newTable);\r\n                forceUpdate();\r\n        }\r\n    };\r\n\r\n    const lastSort = () => {\r\n        let newTable = table.sort((a, b) => {\r\n            if (a.last < b.last) {\r\n                return -1\r\n            }\r\n            if (a.last > b.last) {\r\n                return 1\r\n            }\r\n            return 0\r\n        });\r\n        let choice = prompt('Type \"a\" for Ascending or \"d\" for Descending');\r\n        if (choice === null) {\r\n            return;\r\n        } else if (choice !== 'a' && choice !== 'd') {\r\n            alert('Please enter a valid character!');\r\n            lastSort();\r\n        }\r\n        switch (choice.toLowerCase()) {\r\n            case 'd':\r\n                setTable(newTable.reverse());\r\n                forceUpdate();\r\n                break;\r\n            default:\r\n                setTable(newTable);\r\n                forceUpdate();\r\n        }\r\n    };\r\n\r\n    const ageSort = () => {\r\n        let newTable = table.sort((a, b) => {\r\n            if (a.age < b.age) {\r\n                return -1\r\n            }\r\n            if (a.age > b.age) {\r\n                return 1\r\n            }\r\n            return 0\r\n        });\r\n        let choice = prompt('Type \"a\" for Ascending or \"d\" for Descending');\r\n        if (choice === null) {\r\n            return;\r\n        } else if (choice !== 'a' && choice !== 'd') {\r\n            alert('Please enter a valid character!');\r\n            ageSort();\r\n        }\r\n        switch (choice.toLowerCase()) {\r\n            case 'd':\r\n                setTable(newTable.reverse());\r\n                forceUpdate();\r\n                break;\r\n            default:\r\n                setTable(newTable);\r\n                forceUpdate();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table className=\"table table-hover\">\r\n            <thead>\r\n                <header className=\"tableHead\">Employees</header>\r\n                <tr>\r\n                    <th>Employee Photo</th>\r\n                    <th>First Name <button className='downArrow fa fa-angle-down' onClick={() => firstSort()}></button></th>\r\n                    <th>Last Name <button className='downArrow fa fa-angle-down' onClick={() => lastSort()}></button></th>\r\n                    <th>Age <button className='downArrow fa fa-angle-down' onClick={() => ageSort()}></button></th>\r\n                    <th>City</th>\r\n                    <th>State</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {table.map(employee => (\r\n                    <tr key={employee.key}>\r\n                        <td>\r\n                            <img src={employee.image} alt=\"Not Provided\"></img>\r\n                        </td>\r\n                        <td>\r\n                            {employee.first}\r\n                        </td>\r\n                        <td>\r\n                            {employee.last}\r\n                        </td>\r\n                        <td>\r\n                            {employee.age}\r\n                        </td>\r\n                        <td>\r\n                            {employee.city}\r\n                        </td>\r\n                        <td>\r\n                            {employee.state}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Table;","import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport Search from \"../Search\";\r\nimport Table from \"../Table\";\r\n\r\nconst Wrapper = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Search />\r\n            <Table />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Header from \"./components/Header\";\r\nimport Search from \"./components/Search\";\r\nimport Table from \"./components/Table\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Wrapper>\r\n      <Header />\r\n      <Search />\r\n      <Table />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}